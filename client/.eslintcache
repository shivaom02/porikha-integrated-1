[{"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\App.js":"2","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\routes\\PrivateRoute.js":"3","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\utilsClient\\setToken.js":"4","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\correspondingExams\\exam.js":"5","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\exam\\create_Exam.js":"6","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\login_register\\login.js":"7","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\classroom_teacher_signup\\classhall.js":"8","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\exam\\Exam_Hall.js":"9","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\particularExamDetails\\exam.js":"10","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\studentAnswerScript.js\\studentAnswer.js":"11","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\studentContexts\\studentState.js":"12","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\classContexts\\classState.js":"13","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\authContexts\\authState.js":"14","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\login_register\\register.js":"15","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\exam\\Student_Entry.js":"16","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\examContexts\\AppState.js":"17","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\authContexts\\authContext.js":"18","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\correspondingExams\\Noresults.js":"19","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\correspondingExams\\searchExams.js":"20","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\examContexts\\AppContext.js":"21","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\classroom_teacher_signup\\classRoom.js":"22","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\classroom_teacher_signup\\model.js":"23","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\classContexts\\classContext.js":"24","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\exam\\examCSS.js":"25","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\classroom_teacher_signup\\classroomSearch.js":"26","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\classroom_teacher_signup\\Noresults.js":"27","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\particularExamDetails\\Noresults.js":"28","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\studentAnswerScript.js\\studentCSS.js":"29","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\studentContexts\\StudentContext.js":"30","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\studentContexts\\studentReducer.js":"31","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\authContexts\\authReducer.js":"32","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\classContexts\\classReducer.js":"33","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\types.js":"34","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\examContexts\\AppReducer.js":"35","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\navbar\\Navbar.js":"36","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\Timer\\Timer.js":"37","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\navbar\\Menuitems.js":"38","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\navbar\\Button.js":"39","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\webcamContext\\webCamState.js":"40","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\EHStudent\\EHStudent.js":"41","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\Editor\\Editor.js":"42","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\login_register\\confirmationPage.js":"43","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\webcamContext\\webcamReducer.js":"44","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\webcamContext\\webcamContext.js":"45","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\Face\\Face.js":"46","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\Face\\utilities.js":"47"},{"size":198,"mtime":1616217727920,"results":"48","hashOfConfig":"49"},{"size":2887,"mtime":1616222738504,"results":"50","hashOfConfig":"49"},{"size":474,"mtime":1616217727962,"results":"51","hashOfConfig":"49"},{"size":227,"mtime":1616217728016,"results":"52","hashOfConfig":"49"},{"size":3367,"mtime":1616223993062,"results":"53","hashOfConfig":"49"},{"size":4881,"mtime":1616217725150,"results":"54","hashOfConfig":"49"},{"size":2782,"mtime":1616223993242,"results":"55","hashOfConfig":"49"},{"size":2526,"mtime":1616217724812,"results":"56","hashOfConfig":"49"},{"size":8246,"mtime":1616217725050,"results":"57","hashOfConfig":"49"},{"size":5436,"mtime":1616223993693,"results":"58","hashOfConfig":"49"},{"size":6392,"mtime":1616218415836,"results":"59","hashOfConfig":"49"},{"size":1980,"mtime":1616217726943,"results":"60","hashOfConfig":"49"},{"size":3652,"mtime":1616217726696,"results":"61","hashOfConfig":"49"},{"size":2892,"mtime":1616217726577,"results":"62","hashOfConfig":"49"},{"size":4259,"mtime":1616223993316,"results":"63","hashOfConfig":"49"},{"size":2526,"mtime":1616217725102,"results":"64","hashOfConfig":"49"},{"size":1673,"mtime":1616217726814,"results":"65","hashOfConfig":"49"},{"size":102,"mtime":1616217726514,"results":"66","hashOfConfig":"49"},{"size":242,"mtime":1616217724928,"results":"67","hashOfConfig":"49"},{"size":898,"mtime":1616223993163,"results":"68","hashOfConfig":"49"},{"size":103,"mtime":1616217726733,"results":"69","hashOfConfig":"49"},{"size":1764,"mtime":1616223992846,"results":"70","hashOfConfig":"49"},{"size":3655,"mtime":1616223992979,"results":"71","hashOfConfig":"49"},{"size":106,"mtime":1616217726614,"results":"72","hashOfConfig":"49"},{"size":179,"mtime":1616217725203,"results":"73","hashOfConfig":"49"},{"size":877,"mtime":1616223992916,"results":"74","hashOfConfig":"49"},{"size":231,"mtime":1616217724731,"results":"75","hashOfConfig":"49"},{"size":254,"mtime":1616223993614,"results":"76","hashOfConfig":"49"},{"size":1027,"mtime":1616217725889,"results":"77","hashOfConfig":"49"},{"size":111,"mtime":1616217726857,"results":"78","hashOfConfig":"49"},{"size":1145,"mtime":1616217726898,"results":"79","hashOfConfig":"49"},{"size":1188,"mtime":1616217726533,"results":"80","hashOfConfig":"49"},{"size":1638,"mtime":1616217726660,"results":"81","hashOfConfig":"49"},{"size":1447,"mtime":1616224730349,"results":"82","hashOfConfig":"49"},{"size":783,"mtime":1616217726776,"results":"83","hashOfConfig":"49"},{"size":668,"mtime":1616223993536,"results":"84","hashOfConfig":"49"},{"size":1900,"mtime":1616217724695,"results":"85","hashOfConfig":"49"},{"size":27,"mtime":1616223993380,"results":"86","hashOfConfig":"49"},{"size":596,"mtime":1616217725575,"results":"87","hashOfConfig":"49"},{"size":686,"mtime":1616217565637,"results":"88","hashOfConfig":"49"},{"size":4984,"mtime":1616223303778,"results":"89","hashOfConfig":"49"},{"size":2435,"mtime":1616167583827,"results":"90","hashOfConfig":"49"},{"size":260,"mtime":1616217725244,"results":"91","hashOfConfig":"49"},{"size":291,"mtime":1616215774228,"results":"92","hashOfConfig":"49"},{"size":109,"mtime":1616210451674,"results":"93","hashOfConfig":"49"},{"size":3955,"mtime":1616223209050,"results":"94","hashOfConfig":"49"},{"size":24548,"mtime":1615899189854,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"3br96s",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"98"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"98"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"98"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\index.js",[],["208","209"],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\App.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\utilsClient\\setToken.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\correspondingExams\\exam.js",["210","211"],"import React,{useState,useEffect,useContext} from \"react\";\nimport \"../../css/Page1.css\";\nimport { Link , useParams } from \"react-router-dom\";\nimport Navbar from '../navbar/Navbar';\nimport SearchExam from './searchExams';\n\nimport AppContext from '../../context/examContexts/AppContext';\nimport Noresults from './Noresults';\n\nconst Exam=()=>{\n\n    const { _id } = useParams();\n\n    const [ exams , setExams ] = useState(null);\n\n    const { getCorrespondingExams , search , correspondingExams } = useContext( AppContext );\n    \n    useEffect(async () => {\n\n           await getCorrespondingExams(_id);\n\n           await setExams(correspondingExams);\n\n           console.log(correspondingExams);\n\n    }, [correspondingExams])\n\n    return (\n        <>\n            <Navbar />\n            <div className=\"Page1\">\n                    <div className=\"lev1\">\n                        <SearchExam className=\"box1\"></SearchExam> \n                        <div className=\"box2\">\n                            <h2 style={{padding:'10px',background:'#1DA6CF'}}><Link to = {`/exam/create/${_id}`} style={{textDecoration:'none',color:'white'}}>Create Exam</Link></h2>\n                        </div>\n                    </div>\n                    <div className=\"history\" >\n                        <h4 style={{color:'black',fontWeight:'bold'}}>HISTORY</h4>\n                    </div>\n                    <div className=\"table\">\n                    <table  style={{borderRadius:'10px'}}>\n                            <tr style={{color:'black',fontWeight:'bold'}}>\n                                <th style={{fontWeight:'bold'}}>Exam ID</th>\n                                <th style={{fontWeight:'bold'}}>EXAM DATE</th>\n                                <th style={{fontWeight:'bold'}}>NAME</th>\n                            </tr>\n\n                            { search!==null ? \n                               \n                                search.length===0 ? \n                                \n                                <Noresults /> : \n                                 search.map(exam =>(\n                                    <tr style={{background:'#F2F0F0',marginBottom:'20px'}}>\n                                       <td><Link to ={`/exam/details/${exam._id}`} style={{textDecoration:'none',color:'black'}}>{exam._id}</Link></td>\n                                       <td>{exam.date.split(\"T\")[0]}</td>\n                                       <td>{exam.name}</td>\n                                    </tr>\n                                )) : \n                                 exams===null || exams.length===0 ? <Noresults /> :\n                                 exams.map(exam =>(\n                                    <tr style={{background:'#F2F0F0',marginBottom:'20px'}}>\n                                       <td><Link to ={`/exam/details/${exam._id}`} style={{textDecoration:'none',color:'black'}}>{exam._id}</Link></td>\n                                       <td style={{color:'black'}}>{exam.date.split(\"T\")[0]}</td>\n                                       <td style={{color:'black'}}>{exam.name}</td>\n                                    </tr>\n                                )) \n                            }\n                           \n                        </table>\n                    </div>\n                    \n               </div>\n        </>)\n}\n\nexport default Exam;","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\exam\\create_Exam.js",["212","213","214","215"],"import React,{ useState , useContext , useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nimport '../../css/create_exam.css';\nimport AppContext from '../../context/examContexts/AppContext';\nimport { useParams } from 'react-router-dom';\nimport authContext from '../../context/authContexts/authContext';\n\n\nconst Create_Exam = ()=> {\n\n    const { _id } = useParams();\n\n    const { storeExamDetails } = useContext(AppContext);\n\n    const [ response , setResponse ] = useState(''); \n\n    const [ examCreated , setExamCreated ] = useState(false);\n\n    const [ examRequested , setExamRequested ] = useState(false);\n\n    const [ examId , setExamId ] = useState('');\n\n    const [ exam , setExam ] = useState({\n        name:'',hour:'0',minute:'0'\n    })\n\n    const [ fileD , setFileD ] = useState(null); \n\n    const { name , hour , minute } = exam;\n\n    const { teacher , getTeacher } = useContext(authContext);\n\n    const [ teacherState , setTeacherState ] = useState(null);\n\n    useEffect(async ()=>{\n        if(teacherState===null){\n          await getTeacher();\n          await setTeacherState(teacher);\n        }\n    },[teacher]);\n\n    const handleChange = (e)=>{\n        setExam({\n            ...exam,\n            [e.target.name]:[e.target.value]\n        })\n    }\n\n    const setFile = (e)=>{\n        setFileD(e.target.files[0]);\n    }\n\n    const onSubmit = async (e)=>{\n\n        e.preventDefault();\n\n        setExamRequested(true);\n\n        console.log(exam,fileD);\n\n        if(fileD && !(fileD.type==='image/png' || fileD.type==='image/jpg' || fileD.type==='image/jpeg' || fileD.type==='application/pdf')){\n            setResponse(`Please Upload a image or pdf less than 1MB `);\n            setExamRequested(false);\n            return;\n        }\n\n       if(fileD && fileD.size>1000000){\n           setResponse(`Please Upload a image or pdf less than 1MB ${fileD.size} kb is not allowed`);\n           setExamRequested(false);\n           return;\n        }\n\n        const formData = new FormData();\n\n        formData.append('name',name);\n        formData.append('hour',hour);\n        formData.append('minute',minute);\n        formData.append('upload_question_paper',fileD);\n        formData.append('_id',_id);\n\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        };\n\n        axios.post(`/exam/uploadQuestionPaper`,formData,config)\n            \n        .then((response) => {\n\n                console.log(response.data);\n               \n                if(response.data.error!==undefined){\n                    \n                    setResponse(response.data.error);\n                    \n                    return;\n                }\n              \n                setResponse(\"The question paper is successfully uploaded and the exam room has been created\");\n\n                setExamCreated(true);\n\n                setExamId(response.data.exam._id);\n\n                storeExamDetails(response.data.exam._id);\n            \n        }).catch((error) => {\n                setExamRequested(false);\n                console.log(error);\n        });\n    }\n\n    const disableButton = {  disabled: 'disabled' }\n\n    const heading={\n        marginLeft:'-400vw'\n    }\n\n    return(\n        <>   \n     <>   \n              <h1 id=\"createheading\">NEW EXAM</h1>\n\n              <form onSubmit={onSubmit} id=\"hello\">\n              \n                <input type=\"text\"  className=\"newexambutton_top\"  placeholder='Enter Examination Name' name='name' onChange={handleChange} value={name} required/><br />\n              \n                <h1 className=\"settime\" style={{color:'white'}}>Set Time( hh : mm )</h1>\n                \n                <input type=\"Number\"  className=\"newexambutton_time\" placeholder='hr' name='hour' onChange={handleChange} value={hour} required/>\n        \n                <input type=\"Number\"  className=\"newexambutton_time\" placeholder='min' name='minute' onChange={handleChange} value={minute} required/><br />\n                \n                <h1 className=\"upload_newexam\" style={{color:'white'}}>Upload Question Paper</h1>  \n\n                <input type='file'  className=\"newexambutton\"  name=\"upload_question_paper\" onChange={setFile} required/><br />\n              \n                <button type='submit' className=\"newexamsubmit\" style={disableButton}>Create Exam</button>\n              \n              </form>\n\n              <div style={{color:'white'}} className=\"personal_msg\">\n\n                 { response!==''? response : '' }\n\n              </div>\n              { examCreated===true && teacherState!==null ? \n                  <Link to={`/exam_hall?name=${teacherState.name}&room=${name}&_id=${examId}&st=1`}><button>Click to Enter Classroom</button></Link> \n              : null }\n             \n         </>\n      \n   </>\n    )\n}\n\nexport default Create_Exam;","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\login_register\\login.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\classroom_teacher_signup\\classhall.js",["216","217","218","219","220","221","222"],"import React,{useState, useContext,useEffect} from 'react'\n// import '../../App.css';\nimport '../../css/classhall.css';\nimport plus from \"../../img/plus.png\";\nimport Model from './model';\nimport ClassRoom from './classRoom';\nimport ClassContext from '../../context/classContexts/classContext';\nimport ClassroomSearch from './classroomSearch';\nimport Noresults from './Noresults';\nimport authContext from '../../context/authContexts/authContext';\n\nconst Classhall = () => {\n\n    const {classRooms,search,isOpen,changeIsOpen ,clearEditDetails , getClassroom } = useContext(ClassContext);\n\n    const { log_out , clearError, teacher , getTeacher } = useContext(authContext);\n\n    const [ teacherState , setTeacherState ] = useState(null);\n\n    const [classes , setClasses]=useState([]);\n\n    useEffect(async ()=>{\n        if(teacherState===null){\n          await getTeacher();\n          await setTeacherState(teacher);\n        }\n     },[teacher]);\n\n    useEffect(async ()=>{\n           await  getClassroom();\n           await  setClasses(classRooms);\n    },[classRooms])\n\n    const handleChange=()=>{\n        changeIsOpen();\n        clearEditDetails();\n    }\n\n    const logout=()=>{\n        log_out();\n        clearError();\n    }\n\n    const buttonStyles={position:'absolute',margin:\"1% 80%\",zIndex:'10000',borderRadius:'5px',cursor:'pointer'}\n    return (\n        <div className=\"classHall\">\n             <div className=\"topnav\" id=\"myTopnav\">\n                <a  className=\"active\">Porikkha</a>\n                \n                <div className=\"plus\"><span>Create New Classroom</span><button onClick={handleChange}><img id=\"p_button\" src={plus} /></button></div>\n                <button className=\"CHlogout\" style={{position:'absolute',marginLeft:'500px',marginTop:'-30px'}}  onClick={logout}>Log Out</button>\n            \n             </div>\n             <ClassroomSearch/>\n             <Model open={isOpen} isClose={handleChange}>\n                   {teacherState!==null ? teacherState.name : null}               \n                </Model>\n             <div className=\"exams\">\n                 { search !== null ? search.length===0 ? \n                      <Noresults /> : \n                      search.map((classRoom)=><ClassRoom key={classRoom._id} classRoom={classRoom}/>) : \n                      classes.length===0 ? <Noresults /> :\n                      classes.map((classRoom)=><ClassRoom key={classRoom._id} classRoom={classRoom}/>) \n                 }\n             </div>\n        </div>\n    )\n}\n\nexport default Classhall","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\exam\\Exam_Hall.js",["223","224","225","226","227"],"import React , { useState , useEffect , useContext } from 'react'\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport AppContext from '../../context/examContexts/AppContext';\n\nimport axios from 'axios';\n\nimport { formContainer } from './examCSS';\n\nimport '../../css/porikha.css';\nimport Timer from '../Timer/Timer';\n\nlet socket;\n\nconst Exam_Hall = ({location}) => {\n\n    const { exams , storeExamDetails } = useContext(AppContext);\n\n    const [ startDate , setstartDate ] = useState(0);\n\n    const END_POINT = 'localhost:5000';\n\n    const [ name , setName ] = useState('');\n    const [ room , setRoom ] = useState('');\n    const [ message , setMessage ] = useState('');\n    const [ sendMessage , setSendMessage ] = useState('');\n    const [ usersInRoom , setusersInRoom ] = useState([]);\n    const [ imgSrc , setImgSrc ] = useState('');\n    const [ st,setSt ] = useState(-1);\n    const [ response , setResponse ] = useState(null);\n    const [ fileD , setFileD ] = useState(null); \n    const [ _id , setId ] = useState(''); \n    const [ scholarId, setScholarId ] = useState(0);\n    const [ examS , setExamS ] = useState(null);\n\n    const arrayBufferToBase64 = (buffer)=>{\n     \n        var binary = '';\n     \n        var bytes = [].slice.call(new Uint8Array(buffer));\n     \n        bytes.forEach((b) => binary += String.fromCharCode(b));\n     \n        return window.btoa(binary);\n    };\n    \n\n    useEffect( async ()=> {\n\n            const { name , room , scholarId , _id , st } = queryString.parse(location.search);\n\n            setSt(st);\n            setId(_id);\n            setScholarId(scholarId);\n\n            if(examS===null){\n\n               const responseS = await axios.get(`/exam/getQuestionPaper/${_id}`);\n\n               console.log(responseS);\n\n               await setExamS(responseS);\n\n               await storeExamDetails(_id);\n\n               console.log(exams);\n\n            }\n\n            if(examS!==null){\n\n              console.log('Exams',examS.data.exam);\n\n              const base64Flag = `data:${examS.data.exam.questionPaperType};base64,`;\n           \n              const imageStr = arrayBufferToBase64(examS.data.exam.questionPaper.data);\n\n              setImgSrc( base64Flag + imageStr );\n\n              const x = examS!==null ? ( examS.data.exam.timeLength.split(\":\")[0]*60*60 + examS.data.exam.timeLength.split(\":\")[1]*60 )*1000 : 0;\n\n              console.log(examS.data.exam.timeLength.split(\":\")[0] ,\" \",examS.data.exam.timeLength.split(\":\")[1], x);\n          \n              setstartDate(new Date().getTime() + x);\n\n            }\n  \n            socket = io();\n\n            console.log(socket);\n\n            socket.emit( 'joinRoom' , { username: name , room } );\n\n            socket.on('message', ({ username , text , time }) =>{\n                setMessage(text);\n            })\n\n            setName(name);\n            setRoom(room);\n\n            socket.on('getUsersToRoom',({room , users})=>{\n                setusersInRoom(users);\n            }) \n            \n            return()=>{\n                socket.on('disconnect');\n\n                socket.on('getUsersToRoom',({room , users})=>{\n                    setusersInRoom(users);\n                }) \n                \n                socket.off();\n            }\n\n    }, [ END_POINT , examS , location.search ])\n\n    console.log(usersInRoom);\n\n    const onSubmit = (e)=>{\n        e.preventDefault();\n\n        socket.emit('sendMessage',sendMessage);\n\n        setSendMessage('');\n\n        socket.on('message', ({ username , text , time }) =>{\n            setMessage(text);\n        })\n    }\n\n    const handleChange = (e)=>{\n        setSendMessage(e.target.value);\n    }\n\n    const setFile = (e)=>{\n        setFileD(e.target.files[0]);\n    }\n\n    const onSubmitAnswer = (e)=>{\n        e.preventDefault();\n\n        console.log(fileD);\n\n        if(fileD && !(fileD.type==='image/png' || fileD.type==='image/jpg' || fileD.type==='image/jpeg' || fileD.type==='application/pdf')){\n            setResponse(`Please Upload a image or pdf less than 1MB `);\n            return;\n        }\n\n       if(fileD && fileD.size>10000000){\n           setResponse(`Please Upload a image or pdf less than 10MB ${fileD.size/1000} MB is not allowed`);\n           return;\n        }\n\n        const formData = new FormData();\n\n        formData.append('name',name);\n        formData.append('upload_answer_script',fileD);\n        formData.append('_id',_id);\n        formData.append('scholarId',scholarId);\n\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        };\n\n        axios.post(\"/student/uploadAnswerScript\",formData,config)\n            \n        .then((response) => {\n\n                console.log(response);\n               \n                if(response.data.error!==undefined){\n                    \n                    setResponse(response.data.error);\n                    \n                    return;\n                }\n              \n                setResponse(\"The answer Script is successfully uploaded \");\n\n                socket.emit(\"submitAnswerScript\",{ username:name , room:room });\n\n                socket.on('getUsersToRoom',({room , users})=>{\n                    setusersInRoom(users);\n                }) \n            \n        }).catch((error) => {\n                console.log(error);\n        });\n    }\n\n    return (\n      <div className=\"tExam\">\n           <table className='tExambg'>\n              <tr>\n                  <td>\n                     <h2 className=\"tExam\">EXAM CODE : {room} </h2>\n                     <h5 className=\"tExam\">Note for Students :</h5>\n                     <input className=\"tExamnoticeBoard\" type=\"text\" name=\"\" value={message} />\n\n                     { st==1 ? \n            \n                       <form id=\"message\" onSubmit={onSubmit}>\n           \n                       <input type='text' className='message' name='msg' id='msg' placeholder=\"send message\" value = {sendMessage} onChange={handleChange}/>\n      \n                       <button type='submit' style={{height:'40px'}}>Send</button>\n      \n                     </form> : null }\n\n                     <h5>Question Paper :</h5>\n                 \n                    { examS!==null ?\n                        <embed type={examS.data.exam.questionPaperType} src={imgSrc} style={{width:'700px' , height:'1000px'}}></embed>\n                        : <iframe id=\"tExamqpaper\"src=\"embed.pdf\" width=\"700\" height=\"1000\"></iframe>} \n\n                  </td>\n                  <td style={{paddingLeft:'180px',position:'relative',top:'-40vh',left:'-3vw'}}>\n\n                    <h3 className=\"tExam\" style={{marginLeft:'-100px'}}>Time Remaining : <Timer startDate={startDate}/> </h3>\n\n\n                       { st==1 ? \n                    \n                     <div>\n                         <h4 className=\"tExam \" style={{marginLeft:'-100px'}} >Student List</h4>\n\n                         <table className=\"tExamstudentList\">\n\n                       <th style={{paddingRight:'100px'}}>Name</th>\n                       <th>Status</th>\n           \n\n                          {usersInRoom.map((user)=><tr key={user.id}>\n               \n                             <td>{user.username}</td>\n               \n                             <td>{user.status===true?\"True\":\"False\"}</td>\n           \n                         </tr>)} \n\n                        </table>\n                     </div>\n                       \n                        :\n                        <div style={{background:'white',padding:'40px' , marginLeft:'-40px'}}>\n                           <form style={formContainer} onSubmit={onSubmitAnswer}>\n                          \n                          <label>Choose Your Answer Script Here</label>\n                          <input type='file'  name=\"upload_answer_script\" onChange={setFile} required/>\n                         \n                          <button>Submit Answer Script</button>\n                          </form>\n                           {response!==null ? <span>{response}</span> : null}\n                          </div> \n                        }\n\n                  </td>\n              </tr>\n           </table>\n      </div>   \n    )\n}\n\nexport default Exam_Hall;","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\particularExamDetails\\exam.js",["228","229","230","231"],"import React , { useEffect , useState , useContext , useRef } from \"react\";\nimport \"../../css/exam.css\";\n\nimport { useParams , Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport StudentContext from '../../context/studentContexts/StudentContext';\nimport Noresults from \"./Noresults\";\nimport Navbar  from '../navbar/Navbar';\n\nconst Exam=()=>{\n\n    const { _id } = useParams();\n\n    const [ students , setStudents ] = useState(null);\n\n    const [ exam , setExam ] = useState(null);\n\n    const [ studentsLength , setStudentLength ] = useState(0);\n\n    const { getStudents , searchStudentName , searchStudentId , clearStudent , studentsofExam , search , getCheckStatus , checkedStatus } = useContext(StudentContext);\n\n    const searchName = useRef('');\n    const searchId = useRef('');\n\n    const handleChangeName = (e)=>{\n\n        if(searchName.current.value!==''){\n            searchStudentName(e.target.value);\n       }else{\n           clearStudent();\n       }\n\n    }\n\n    const handleChangeScholarId = (e)=>{\n\n        if(searchId.current.value!==''){\n            searchStudentId(e.target.value);\n       }else{\n           clearStudent();\n       }\n\n    }\n\n    useEffect(async () => {\n        const response = await axios.get(`/exam/getExamDetails/${_id}`);\n\n        await setExam(response.data.exam);\n\n        await setStudents(response.data.students);\n\n        setStudentLength(response.data.students.length);\n\n        await getCheckStatus();\n\n        await getStudents(_id);\n    }, [])\n\n    const anchorLink = {\n      color:'#000',\n      textDecoration:'none'\n    }\n\n    const topLebal = {\n      width:'590px',\n      position:'absolute',\n      display:'flex',\n      justifyContent:'space-around',\n      alignItems:'center',\n      marginTop:'-50px'\n    }\n\n    const INPUT_STYLES = {\n      background:'#A7E2F3',\n      border:'1px solid black'\n    }\n\n    return (\n      <div id='ExamId'>\n      <Navbar />\n      <div className=\"PExam\">\n      <h1>{exam!==null ? exam.name : 'Exam Name' }</h1>\n      <div className=\"flex-container\">\n       \n        <div className=\"flex-item-left\">\n       \n          <input type=\"text\" ref={searchName} placeholder=\"Search by name\" className=\"search1\" onChange={handleChangeName} style={INPUT_STYLES}/>\n       \n          <input type=\"Number\" ref={searchId} placeholder=\"Search by ID\" className=\"search2\" onChange={handleChangeScholarId} style={INPUT_STYLES}/>\n       \n          <div className=\"list\">\n       \n           <p style={{marginTop:'50px',fontWeight:'bold',fontSize:'100%'}}>Student list</p>\n\n           <div className=\"table\">\n                    <table>\n                       <tr style={{color:'black',fontWeight:'bold'}}>\n                           <th style={{fontWeight:'bold'}}>Name</th>\n                           <th style={{fontWeight:'bold'}}>ID</th>\n                           <th style={{fontWeight:'bold'}}>Status</th>\n                           <th style={{fontWeight:'bold'}}>Marks</th>\n                        </tr>\n\n                        { search !== null ? search.length===0 ? \n                 <Noresults /> : \n                search.map(\n                  student=>(\n                        <tr style={{background:'#F2F0F0'}}>\n                          <td><Link to={`/student/getStudentDetails/${student._id}`} style={anchorLink}>{student.name}</Link></td> \n                          <td>{student.scholarId}</td>\n                          <td>{student.status===false?'false':'true'}</td>\n                          <td>{student.marks}</td>\n                         </tr> \n                  )\n                ) : \n                studentsofExam.length===0 ? \n                <Noresults /> :\n                studentsofExam.map(\n                  student=>(\n                      <tr style={{background:'#F2F0F0'}}>\n                        <td><Link to={`/student/getStudentDetails/${student._id}`} style={anchorLink}>{student.name}</Link> </td>\n                        <td>{student.scholarId}</td>\n                        <td>{student.status===false?'false':'true'}</td>\n                        <td>{student.marks}</td>\n                      </tr> \n                  )\n                ) \n           }\n    </table>\n                  \n  </div>\n\n\n</div>\n</div>\n<div class=\"flex-item-right\">\n<div className=\"details\">\n    <h4 style={{marginBottom:'25px',fontWeight:'bold',fontSize:'105%'}}>Exam Details</h4>\n    <table>\n        <tr style={{background:'#F2F0F0',marginBottom:'20px'}}>\n            <th>Exam Date</th>\n            <th>{exam!==null ? exam.date.split(\"T\")[0] : NaN}</th>\n        </tr>\n        <tr style={{background:'#F2F0F0',marginBottom:'20px'}}>\n            <td>Student Appreared</td>\n            <td>{studentsLength}</td>\n        </tr>\n        <tr style={{background:'#F2F0F0',marginBottom:'20px'}}>\n            <td>Student Appreared</td>\n            <td>{studentsLength}</td>\n        </tr>\n    </table>\n</div>\n<div className=\"status\">\n    <h3 style={{marginBottom:'25px',marginLeft:'0px',fontWeight:'bold',fontSize:'105%'}}>Check Status</h3>\n    <table>\n        <tr style={{background:'#F2F0F0',marginBottom:'20px'}}>\n            <td>Papers checked</td>\n            <td>{checkedStatus}</td>\n        </tr>\n        <tr style={{background:'#F2F0F0',marginBottom:'20px'}}>\n            <td>Papers remaining</td>\n            <td>{studentsLength - checkedStatus}</td>\n        </tr>\n    </table>\n   </div>\n  </div>\n </div>\n</div>\n</div>)\n}\nexport default Exam;","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\studentAnswerScript.js\\studentAnswer.js",["232","233","234","235","236","237","238"],"import axios from 'axios';\nimport React,{ useEffect, useState } from 'react';\n\nimport { useParams, Link } from 'react-router-dom';\n\nimport { markButton , buttonS , buttonM  , markContainerDesciption , markListStyle , questionAnswer } from './studentCSS';\n\nconst StudentAnswerScript=()=>{\n\n  const [ count , setCount ] = useState(0);\n\n  const [ marksList , setMarksList ] = useState(null);\n\n  const [ pdfSrc , setPdfSrc ] = useState(null);\n\n  const [ questionPaper , setQuestionPaper ] = useState(null);\n\n  const [ questionPaperType , setQuestionPaperType ] = useState(null);\n\n  const [ student , setStudent ] = useState(null);\n\n  const [ totalMarks , setTotalMarks ] = useState(0);\n\n  const [ response , setResponse ] = useState(null);\n\n  const { _id } = useParams();\n\n  const arrayBufferToBase64 = (buffer)=>{\n     \n    var binary = '';\n \n    var bytes = [].slice.call(new Uint8Array(buffer));\n \n    bytes.forEach((b) => binary += String.fromCharCode(b));\n \n    return window.btoa(binary);\n  };\n  \n  useEffect(async ()=>{\n\n   const response = await axios.get(`/student/getStudentDetails/${_id}`);\n\n   await setStudent(response.data);\n\n   console.log(response.data.student.owner);\n\n   const questionPaper = await axios.get(`/exam/getQuestionPaper/${response.data.student.owner}`);\n\n   const base64FlagQ = `data:${questionPaper.data.exam.questionPaperType};base64,`;\n           \n   const imageStrQ = arrayBufferToBase64(questionPaper.data.exam.questionPaper.data);\n   \n   setQuestionPaper( base64FlagQ + imageStrQ );\n\n   setQuestionPaperType(questionPaper.data.exam.questionPaperType);\n\n   console.log(questionPaper);\n\n   await setMarksList(response.data.student.marksDistribution);\n   \n   await setTotalMarks(response.data.student.marks);\n\n   const base64Flag = `data:${response.data.student.answerPaperType};base64,`;\n           \n   const imageStr = arrayBufferToBase64(response.data.student.answerPaper.data);\n   \n   setPdfSrc( base64Flag + imageStr );\n  },[])\n\n  const handleChange = (e)=>{\n    setCount(e.target.value);\n  }\n\n  const onSubmit = async (e)=>{\n    \n    e.preventDefault();\n    \n    let marks=[];\n\n    for(let i=0;i<count;i++){\n      marks.push({ 'index' : i+1 , 'mark' : 0 });\n    }\n\n    await setMarksList(marks);\n\n    console.log(marksList);\n  }\n\n  const changeMarks = async (e)=>{\n\n     if(parseInt(e.target.value)<0)\n       return;\n\n     const list = marksList.map(m => {\n      if(parseInt(m.index)===parseInt(e.target.name)){\n        \n        return{\n            index:m.index,\n            mark:e.target.value\n          }\n       }else{\n        return{\n          index:m.index,\n          mark:m.mark\n        }       \n       }\n     })\n    await setMarksList(list);\n\n    const total = list.reduce((acc, curr) => (\n      acc + parseInt(curr.mark)\n   ), 0)\n    await setTotalMarks(total);\n\n  }\n\n  const submitMarks = async (e)=>{\n      e.preventDefault();\n      \n      console.log('marksList',marksList);\n      \n      console.log('total marks',totalMarks);\n      \n      const config ={\n        header:{\n          'Content-type':'application/json'\n        }\n      }\n\n      const stu = {\n        marksDistribution : marksList,\n        marks : totalMarks,\n        status:true\n      }\n\n      console.log(stu)\n\n      const res = await axios.patch(`/student/updateStudent/${_id}`,stu,config);\n\n      res.data.error===null?\n         setResponse('The answer Script is being checked'):\n         setResponse(`An error Occured ${res.data.error}`);\n      \n  }\n\n  const buttonStyle =  {\n    textAlign: 'center',\n    padding:'1.5% 1% 1.5% 1%',\n    width: '25%',\n    backgroundColor: '#252525',\n    color:'rgb(255, 255, 255)',\n    border:'whitesmoke',\n    border:'10px',\n    borderRadius:'1vw',\n    outline: 'none',\n    border: '2px solid #b9babb',\n    fontSize: 'large'\n}\n\n  return (\n    <div className=\"App\">\n\n        { marksList===null || marksList.length===0 ?\n              <div>\n                   <label style={{color:'white'}} >Enter the number of questions</label>\n      \n                   <form onSubmit={onSubmit}>\n         \n                        <input type='number' name='number' value={count} placeholder=\"Enter the main question Number\" onChange={handleChange}/>\n         \n                        <button type='submit'>Create</button>\n                   </form>\n              <br />\n              </div>\n            :\n            <div>\n\n                <div style={markContainerDesciption}>\n\n                 <span>Question Numbers</span>\n                 \n                 <span >Marks Given</span>\n                </div> \n                <br />\n                <div style={markListStyle}>\n                  {marksList.map(c => \n                   \n                    <div style={markButton}>\n                   \n                        <button style={buttonS} key={c.index}>{c.index}</button>\n                   \n                        <input type='Number' name={`${c.index}`} style={buttonM} key={c.index*100} value={c.mark} onChange={changeMarks} />\n                     </div>\n                  )}\n                </div>\n            </div> \n      }\n        { marksList!==null ?\n              \n              <div style={{background:'white' , padding:'5px 5px' , width:'100px' , height:'90px',marginLeft:'45vw',marginTop:'7vh',display:'flex',justifyContent:'spaceAround',flexDirection:'column'}}>\n              \n                 <span>Total Marks</span><br/>\n              \n                 <button style={{padding:'5px 5px'}}>{totalMarks}</button>\n             \n              </div>\n          : null}\n      \n      <div style={questionAnswer}>\n\n       { questionPaper !==null ?\n          <embed type={questionPaperType} src={questionPaper} style={{width:'600px' , height:'1000px'}}></embed>\n           : <iframe id=\"tExamqpaper\" src=\"embed.pdf\" width=\"600\" height=\"1000\"></iframe>}  \n\n      \n       { student !==null ?\n         <embed type={student.student.answerPaperType} src={pdfSrc} style={{width:'700px' , height:'1000px'}}></embed> \n       : <iframe id=\"tExamqpaper\" src=\"embed.pdf\" width=\"700\" height=\"1000\"></iframe>} \n\n\n      </div>\n   \n        <form onSubmit={submitMarks} style={{padding:'20px',marginLeft:'-50px'}}>\n           \n           <button type='submit' style={buttonStyle}>Submit Marks</button>            \n        </form>\n        \n        {response!==null?<button>{response}</button>:null}\n    </div>\n  );\n}\n\nexport default StudentAnswerScript;\n\n","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\studentContexts\\studentState.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\classContexts\\classState.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\authContexts\\authState.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\login_register\\register.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\exam\\Student_Entry.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\examContexts\\AppState.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\authContexts\\authContext.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\correspondingExams\\Noresults.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\correspondingExams\\searchExams.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\examContexts\\AppContext.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\classroom_teacher_signup\\classRoom.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\classroom_teacher_signup\\model.js",["239"],"import React,{ useState, useContext,useEffect } from 'react';\nimport classRoomContext from '../../context/classContexts/classContext';\n\nconst Model = ({open,isClose,children}) => {\n\n    const {add_classroom , editDetails ,updateDetails } = useContext( classRoomContext );\n    \n    const MODEL_STYLES={\n       position: 'fixed',\n       top: '50%',\n       left: '50%',\n       transform: 'translate(-50%, -50%)',\n       backgroundColor: 'white',\n       borderRadius:'1rem',\n       padding: '10px',\n       zIndex: 1000,\n       width:'30%',\n       textAlign :'center',\n       height:'50vh'\n    }\n    const OVERLAY_STYLES={\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(70, 70, 70, 49%)',\n       \n      \n        zIndex: 1000\n    }\n    const INPUT_STYLES={\n        border:'3px solid white'\n        ,width:'200%',\n        height:'25%',\n        padding:'10%',\n        fontSize:'large',\n        marginLeft:'-50%',\n        color:'white',\n        background: 'transparent',\n        borderRadius:'20px'\n    };\n    const FORM_STYLES={backgroundColor:'#1DA6CF', height:'68.7%',borderRadius:'10px',marginTop:'2%'};\n    const BUTTON_STYLES={border:'1px solid white',borderRadius:'1em',fontSize:'130%',padding:'6% 0% 6% 0%',margin:'0 3% -5% 3%',cursor:'pointer',color:'white',backgroundColor:'blue'};\n\n    const [classroom,setClassroom]=useState({\n        name:'',\n        strength:''\n    });\n    const [perform,setPerform]=useState('Create');\n    useEffect(() => {\n        const changeDetails=(name,number)=>{\n            setClassroom({\n                name:name,\n                strength:number\n            })\n         }\n        if(editDetails!==null && open===true){\n          changeDetails(editDetails.name, editDetails.strength);\n          setPerform('Edit');\n        }\n        else{\n          changeDetails('','');\n          setPerform('Create');\n        }\n    }, [open])\n\n    const { name, strength } = classroom ;\n\n    const onChange=(e)=>{\n        setClassroom({\n            ...classroom,\n            [e.target.name]:e.target.value\n        })\n    }\n    const onSubmit= async (e)=>{\n        e.preventDefault();\n        classroom.strength=parseInt(classroom.strength);\n        if(editDetails!==null){\n            await updateDetails(editDetails._id,classroom);\n        }else{\n            await add_classroom(classroom);\n        }\n        setClassroom({\n            name:'',\n            strength:'',\n        })\n        isClose();\n    }\n    return (\n        open!==true?null:\n        <div >\n            <div style={OVERLAY_STYLES} />\n            <div style={MODEL_STYLES}>\n              <button onClick={isClose} style={{marginLeft:\"80%\",marginTop:\"0vh\"}}>&#10060;</button><br/><br/>\n            <span style={{fontSize:\"160%\",marginTop:\"0\",color:'#0078A6'}}>ADD NEW CLASS :</span>\n               <br/><br/>\n               <span style={{border:'1px solid blue',padding:'2px'}}>\n                   {children}\n                </span>\n              <form className=\"probinfo\" style={FORM_STYLES} onSubmit={onSubmit}>\n                 <input className=\"username\" style={INPUT_STYLES} type=\"text\" name=\"name\" value={name}  onChange={onChange} placeholder=\"Classroom Name\"  required autoComplete=\"off\" /><br/>\n                 <input className=\"username\" style={INPUT_STYLES} type=\"number\" name=\"strength\" value={strength} onChange={onChange} placeholder=\"Class Strength\"  required autoComplete=\"off\" /><br/>\n                 <input type=\"submit\" value={perform} className=\"button\" style={BUTTON_STYLES} />\n              </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Model;","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\classContexts\\classContext.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\exam\\examCSS.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\classroom_teacher_signup\\classroomSearch.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\classroom_teacher_signup\\Noresults.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\particularExamDetails\\Noresults.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\studentAnswerScript.js\\studentCSS.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\studentContexts\\StudentContext.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\studentContexts\\studentReducer.js",["240"],"import { GET_STUDENTS , CLEAR_SEARCH_S , SEARCH_STUDENTS_NAME , SEARCH_STUDENTS_ID , CHECKED_STATUS } from '../types';\n\nexport default (state,{type,payload})=>{\n   switch(type){\n        case GET_STUDENTS:\n            return {\n                ...state,\n                studentsofExam:payload\n            }\n        case CHECKED_STATUS:\n            return{\n                ...state,\n                checkedStatus:state.studentsofExam.filter(student =>student.status===true).length\n            }\n        case SEARCH_STUDENTS_NAME :\n           const reg=new RegExp(`${payload}`,'gi');\n           return{\n               ...state,\n               search:state.studentsofExam.filter(student=>student.name.match(reg))\n           }\n        case SEARCH_STUDENTS_ID :\n            const regI=new RegExp(`${payload}`,'gi');\n            return{\n                ...state,\n                search:state.studentsofExam.filter(student=>String(student.scholarId).match(regI))\n            }\n       case CLEAR_SEARCH_S :\n           return {\n               ...state,\n               search:null          \n           }    \n        default:\n            return state;\n   }\n}","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\authContexts\\authReducer.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\classContexts\\classReducer.js",["241","242"],"import { SEARCH_CLASSROOM , CLEAR_SEARCH, ADD_CLASSROOM, DELETE_CLASSROOM, CHANGE_IS_OPEN, EDIT_DETAILS ,CLEAR_EDIT,UPDATE_DETAILS , GET_CLASSROOM , CLASSROOM_ERROR} from '../types';\n\nexport default (state,{type,payload})=>{\n   switch(type){\n        case UPDATE_DETAILS:\n            return{\n                ...state,\n                classRooms:state.classRooms.map(classRoom=>classRoom._id===payload._id ? payload : classRoom )\n            }\n        case CLEAR_EDIT:\n            return{\n                ...state,\n                editDetails:null\n            }\n        case EDIT_DETAILS:\n            return {\n                ...state,\n                editDetails:payload\n            }\n        case CHANGE_IS_OPEN:\n            return {\n                ...state,\n                isOpen:!state.isOpen\n            }\n        case DELETE_CLASSROOM:\n          return{\n             ...state,\n             classRooms:state.classRooms.filter(classRoom=>classRoom._id!==payload)\n          }\n       case ADD_CLASSROOM:\n           return{\n               ...state,\n               classRooms:[...state.classRooms,payload]\n           }\n       case SEARCH_CLASSROOM :\n           const reg=new RegExp(`${payload}`,'gi');\n           return{\n               ...state,\n               search:state.classRooms.filter(classRoom=>classRoom.name.match(reg))\n           }\n       case CLEAR_SEARCH :\n           return {\n               ...state,\n               search:null          \n           }\n        case GET_CLASSROOM:\n            return {\n                ...state,\n                classRooms:payload\n            }\n        default:\n            return state;\n   }\n}","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\types.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\examContexts\\AppReducer.js",["243"],"import { STORE_EXAM , GET_EXAMS ,SEARCH_EXAM_BY_NAME , CLEAR_EXAM_BY_NAME } from '../types';\n\nexport default (state,{type,payload})=>{\n   switch(type){\n       case STORE_EXAM:\n        return{\n          ...state,\n          exams:payload    \n        }      \n       case GET_EXAMS:\n          return {\n              ...state,\n              correspondingExams:payload\n          }\n        case SEARCH_EXAM_BY_NAME :\n          const reg=new RegExp(`${payload}`,'gi');\n          return{\n              ...state,\n              search:state.correspondingExams.filter(exam=>exam.name.match(reg))\n          }\n        case CLEAR_EXAM_BY_NAME :\n            return {\n                ...state,\n                search:null          \n            }       \n       default:\n           return state;\n   }\n}","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\navbar\\Navbar.js",["244","245","246"],"import React, { Component } from 'react';\nimport { MenuItems } from \"./Menuitems\"\nimport { Button } from \"./Button\"\nimport './Navbar.css'\n\nimport logo from '../../img/Porikkha_logo.png';\n\nclass Navbar extends Component {\n    state = { clicked: false }\n\n    handleClick = () => {\n        this.setState({ clicked: !this.state.clicked })\n    }\n\n    render() {\n        return(\n            <nav className=\"NavbarItems\">\n                <h1 className=\"navbar-logo\">\n                    <img src={logo} style={{width:'16%',marginLeft:'-40%'}}/>\n                </h1>\n                {/* <Button>Add New</Button> */}\n            </nav>\n        )\n    }\n}\n\nexport default Navbar","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\Timer\\Timer.js",["247"],"\nimport React, { Component } from \"react\";\nimport \"./Timer.css\";\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.countDownId = null;\n    this.state = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      expired: false\n    };\n  }\n\n  componentDidMount() {\n    this.countDownId = setInterval(this.timerInit, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.countDownId) {\n      clearInterval(this.countDownId);\n    }\n  }\n\n  timerInit = () => {\n    const { startDate } = this.props;\n    console.log(startDate);\n    const now = new Date().getTime();\n    if (!startDate) {\n      this.setState({ expired: true });\n      return;\n    }\n    const countDownStartDate = new Date(startDate).getTime();\n    const distance = countDownStartDate - now;\n    const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    const hours = Math.floor(\n      (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n    );\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n    // For countdown is finished\n    if (distance < 0) {\n      clearInterval(this.countDownId);\n      this.setState({\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        expired: true\n      });\n      return;\n    }\n    this.setState({ days, hours, minutes, seconds, expired: false });\n  };\n\n  render() {\n    const { days, hours, minutes, seconds, expired } = this.state;\n    if (expired) {\n      return <div className=\"expired\">Expired :(</div>;\n    }\n    return (\n      <div className=\"timer\">\n        \n        <div>\n          {hours}\n          <span>h</span>\n        </div>\n        <div>\n          {minutes}\n          <span>m</span>\n        </div>\n        <div>\n          {seconds}\n          <span>s</span>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Timer;\n","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\navbar\\Menuitems.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\navbar\\Button.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\webcamContext\\webCamState.js",["248"],"import React,{useReducer} from 'react';\r\nimport WebcamReducer from './webcamReducer';\r\nimport WebcamContext from './webcamContext';\r\nimport axios from 'axios';\r\nimport { CHECK_WEB } from '../types';\r\n\r\nconst WebCamState=(props)=>{\r\n   const initialState={\r\n        webcam:false,\r\n   }\r\n\r\nconst [state, dispatch] = useReducer(WebcamReducer, initialState);\r\n\r\n   \r\nconst CheckWebCam=(webcam)=>{\r\n    dispatch({\r\n        type:CHECK_WEB,\r\n        payload:webcam\r\n    })\r\n}\r\n\r\n   return(\r\n      <WebcamContext.Provider\r\n      value={{\r\n        checkCam:state.webcam,\r\n          CheckWebCam,\r\n      }} \r\n      >{props.children}</WebcamContext.Provider>\r\n   )\r\n}\r\nexport default WebCamState;\r\n","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\EHStudent\\EHStudent.js",["249","250","251","252","253"],"import React, { Component,useEffect ,useState,useContext} from 'react';\nimport Timer from '../Timer/Timer'\nimport Face,{check,webcamRef} from '../Face/Face'\nimport './EHStudent.css'\nimport pdf from './pdf/DSproject.pdf'\nimport { browser } from '@tensorflow/tfjs-core';\nimport webCamContext from '../../context/webcamContext/webcamContext';\n\nconst Ehstudent =()=>{\n\n\n\n     const {checkCam} =useContext(webCamContext);\n    console.log(check);\n    const [click,setClick]=useState(false);\n    const [tabChange,setTabChanges]=useState(0);\n    // const [checkCam,setCheckCam]=useState(check);\n    const x = 500000;\n    const startDate = new Date().getTime() + x;\n    const handleClick=()=>{\n        \n        setClick(!click);\n    }\n\n    \n\n\n\n    useEffect(()=>{\n        console.log(checkCam);\n        // setCheckCam(check);\n        window.onbeforeunload = confirmExit;\n            function confirmExit()\n            {\n              return \"show warning\";\n            }   \n                   \n        \n            document.addEventListener(\"visibilitychange\",()=>{\n                \n                if(document.hidden){\n                    const count =tabChange+1\n                    setTabChanges(count);\n                    console.log(tabChange);\n                }\n                if(tabChange==4){\n                    alert(\"max tab change limit reached\")\n                }\n                \n                \n            })\n            // if(!checkCam){\n            //     document.querySelector(\".popup_setup\").style.display=\"block\";\n            // }\n            // if(checkCam){\n            //     document.querySelector(\".popup_setup\").style.display=\"none\";\n            // }\n            \n        \n    },[tabChange,checkCam])\n\n\n    // const CheckWebCam=()=>{\n    //     console.log(\"click\");\n    //     window.location.reload();\n    //     setCheckCam(true);\n    //     if(checkCam){\n    //         document.querySelector(\".popup_setup\").style.display=\"none\";\n    //     }\n    //     console.log(check);\n    // }\n\n    return(<>\n            {/* <div className=\"popup_setup\">\n                <div className=\"model_popup\">\n                </div>\n                <div className=\"model_container\">\n                    <div className=\"my_custom_model\">\n                        <div className=\"top_bar\"></div>\n                        <h2>Alert !</h2>\n                        <div className=\"model_msg\">\n                            Allow the website to access webcam and click ok to remove  or\n                            else you wont be able to give the exam.\n                            \n                        </div>\n                        <center><button onClick={()=>{CheckWebCam()}} >Ok</button></center>\n                    </div>\n                </div>\n            </div> */}\n            {/* <h1>Name: Pinky Sharma</h1> */}\n                <div className=\"Student\">\n                    <div className=\"ab\">\n                        <div className=\"my_name_is\">\n                            <h1>Name: Pinky Sharma</h1>\n                        </div>\n                        <embed src= {pdf} width=\"85%\" height=\"900vh\"/>\n                        \n                    </div>\n                    <div className=\"cd\">\n                    \n                        <div id=\"app\"><h2>Time Remaining:<br/></h2><Timer startDate={startDate} /></div>\n                        <div className=\"right\">\n                        <div><Face /></div>\n                            <div className=\"noticeBoard\">Notice Board</div>\n                        <div className =\"submit_EHS\">\n                            <div type=\"file\" className=\"upload\">UPLOAD</div>\n                            <div className=\"submit\">SUBMIT</div>\n                        </div>\n\n            </div>\n                    </div>\n                    \n\n                </div>\n\n    </>)\n}\n// class Ehstudent extends Component {\n    \n//     state = { clicked: false }\n\n//     handleClick = () => {\n//         this.setState({ clicked: !this.state.clicked })\n//     }\n\n\n//     render() {\n//         const x = 500000;\n//             const startDate = new Date().getTime() + x;\n//         return(\n            \n//       <>\n\n//      <h1>Name: Pinky Sharma</h1>\n//       <div className=\"Student\">\n//         <div className=\"ab\">\n           \n//             <embed src= {pdf} width=\"85%\" height=\"900vh\"/>\n        \n            \n//           </div>\n//         <div className=\"cd\">\n        \n//             <div id=\"app\"><h2>Time Remaining:<br/></h2><Timer startDate={startDate} /></div>\n//             <div className=\"right\">\n//             <div><Face /></div>\n//                 <div className=\"noticeBoard\">Notice Board</div>\n//              <div className =\"submit_EHS\">\n//                  <div type=\"file\" className=\"upload\">UPLOAD</div>\n//                  <div className=\"submit\">SUBMIT</div>\n//              </div>\n\n// </div>\n//         </div>\n        \n\n//       </div>\n//       </>\n      \n//         )\n//     }\n// }\n\nexport default Ehstudent","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\Editor\\Editor.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\login_register\\confirmationPage.js",["254"],"import React from 'react';\nimport AuthContext from '../../context/authContexts/authContext';\nimport '../../App.css';\n\nconst confirmationPage = () => {\n  return (\n    <div>\n      <h1>Confirm your email!</h1>\n    </div>\n  );\n};\n\nexport default confirmationPage;\n","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\webcamContext\\webcamReducer.js",["255"],"import { CHECK_WEB } from '../types';\r\n\r\nexport default (state,{type,payload})=>{\r\n   switch(type){\r\n        case CHECK_WEB:\r\n            return {\r\n                ...state,\r\n                check_web_cam:payload\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n   }\r\n}","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\context\\webcamContext\\webcamContext.js",[],"C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\Face\\Face.js",["256","257","258","259","260","261","262"],"import React, {useRef,useEffect, useState,useContext} from 'react';\n// import Face from \"./components/Face\";\nimport {drawMesh} from \"./utilities\";\n\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as facemesh from \"@tensorflow-models/facemesh\";\nimport Webcam from \"react-webcam\";\nimport \"./Face.css\";\nimport WebCamContext from \"../../context/webcamContext/webcamContext\";\n\nvar count =0;\nvar warning_num =5;\n// var stable = 0;\nvar xyz;\nvar warn=\"good\";\nlet check;\nfunction Face() {\n\n\nconst {CheckWebCam}=useContext(WebCamContext);\n\nconst webcamRef = useRef(null);\nconst canvasRef = useRef(null);\n\nconst [checkThis,setCheckThis]=useState();\n\n\nuseEffect(async ()=>{\n\n  setCheckThis( webcamRef.current.state.hasUserMedia);\n  check=checkThis;\n\n  CheckWebCam(checkThis);\n  // check=await webcamRef.current.state.hasUserMedia;\n  // console.log(webcamRef.current.state.hasUserMedia);\n  // if(!check){\n  //   alert(\"Allow your webcam or else you will be unable to give your exam\");       \n  // }\n \n},[checkThis])\n\n\n\n\n\nconst runFacemesh = async()=>{\n  const net = await facemesh.load({\n    inputResolution:{width:500,height:480},scale:0.8 \n  });\n  \n  setInterval(()=>{\n  \n    detect(net)  \n  },100)\n\n};\nconst detect = async(net)=>{\n  \n  if(\n    typeof webcamRef.current!==\"undefined\" && \n    webcamRef.current !==null && \n    webcamRef.current.video.readyState === 4)\n    {\n      // setCheck(true)\n      // navigator.mediaDevices.getUserMedia({video:true,audio:true},(stream)=>{\n      //   console.log(stream);\n      //   if(!stream.getVideoTracks().length>0){\n          \n      //   }\n      // })\n    //  const video = webcamRef.current.video;\n    //  const videoWidth = webcamRef.current.video.videoWidth;\n    //  const videoHeight = webcamRef.current.video.videoHeight;\n\n    //  webcamRef.current.video.width = videoWidth;\n    //  webcamRef.current.video.height = videoHeight;\n\n    //  canvasRef.current.width = videoWidth;\n    //  canvasRef.current.height = videoHeight;\n    const video = webcamRef.current.video;\n\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n\n    // console.log();\n    // Set video width\n    // webcamRef.current.video.width = videoWidth;\n    // webcamRef.current.video.height = videoHeight;\n\n\n    // Set canvas width\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n     const face = await net.estimateFaces(video);\n     \n     if(face.length === 0){\n       \n      //  document.querySelector(\".popup_setup\").style.display=\"block\";\n      // alert(\"No face detected\")\n  \n      count++;\n      \n     }\n     \n    //  if(count>10){\n    //  warning_num--;\n\n    //   alert(warning_num + \" more times and you will be disqualified\");\n    //   count=0;\n    //  }\n    //  if(warning_num<2){\n    //      alert(\"You are disquilified\");\n    //  }\n    // if(xyz===face){\n    //   stable++;\n    //   xyz =face;\n    // }\n\n   \n    \n     if(face.length !== 0){\n      //  console.log(xyz);\n      }\n    if(face.length >1){\n      alert(\"more than 1 face detected\");\n    }\n     //drawing\n    const ctx = canvasRef.current.getContext(\"2d\");\n    drawMesh(face,ctx);\n  }\n\n}\nrunFacemesh();\n\n  return (\n    <div className=\"App\">\n    <div className=\"model_pop\">\n      <div>\n          UNable\n      </div>\n    </div>\n    <Webcam ref={webcamRef} style={\n      {\n        // position:\"absolute\",\n        marginLeft:\"auto\",\n        marginRight:\"auto\",\n        textAlign:\"center\",\n        left:\"0px\",\n        right:\"0px\",\n        // zIndex:10,\n        width:500,\n        height:390,\n        borderRadius:\"0%\",\n        \n\n      }\n    }/>\n  <canvas ref={canvasRef} style={\n      {\n        position:\"absolute\",\n        marginLeft:\"auto\",\n        marginRight:\"1%\",\n        textAlign:\"center\",\n        left:\"0px\",\n        right:\"0px\",\n        zIndex:10,\n        width:500,\n        height:390\n        \n\n      }\n    }/>\n   \n   </div>\n  );\n}\n\nexport {check};\nexport default Face","C:\\Users\\Asus\\Desktop\\pr\\google_solution_2021\\new\\porikha-integrated-1\\client\\src\\components\\Face\\utilities.js",[],{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","severity":1,"message":"268","line":18,"column":15,"nodeType":"269","endLine":26,"endColumn":6},{"ruleId":"267","severity":1,"message":"270","line":26,"column":8,"nodeType":"271","endLine":26,"endColumn":28,"suggestions":"272"},{"ruleId":"273","severity":1,"message":"274","line":21,"column":13,"nodeType":"275","messageId":"276","endLine":21,"endColumn":26},{"ruleId":"267","severity":1,"message":"268","line":37,"column":15,"nodeType":"269","endLine":42,"endColumn":6},{"ruleId":"267","severity":1,"message":"277","line":42,"column":7,"nodeType":"271","endLine":42,"endColumn":16,"suggestions":"278"},{"ruleId":"273","severity":1,"message":"279","line":118,"column":11,"nodeType":"275","messageId":"276","endLine":118,"endColumn":18},{"ruleId":"267","severity":1,"message":"268","line":22,"column":15,"nodeType":"269","endLine":27,"endColumn":7},{"ruleId":"267","severity":1,"message":"277","line":27,"column":8,"nodeType":"271","endLine":27,"endColumn":17,"suggestions":"280"},{"ruleId":"267","severity":1,"message":"268","line":29,"column":15,"nodeType":"269","endLine":32,"endColumn":6},{"ruleId":"267","severity":1,"message":"281","line":32,"column":7,"nodeType":"271","endLine":32,"endColumn":19,"suggestions":"282"},{"ruleId":"273","severity":1,"message":"283","line":44,"column":11,"nodeType":"275","messageId":"276","endLine":44,"endColumn":23},{"ruleId":"284","severity":1,"message":"285","line":48,"column":17,"nodeType":"286","endLine":48,"endColumn":40},{"ruleId":"287","severity":1,"message":"288","line":50,"column":103,"nodeType":"286","endLine":50,"endColumn":135},{"ruleId":"267","severity":1,"message":"268","line":49,"column":16,"nodeType":"269","endLine":116,"endColumn":6},{"ruleId":"267","severity":1,"message":"289","line":116,"column":8,"nodeType":"271","endLine":116,"endColumn":47,"suggestions":"290"},{"ruleId":"291","severity":1,"message":"292","line":203,"column":26,"nodeType":"293","messageId":"294","endLine":203,"endColumn":28},{"ruleId":"295","severity":1,"message":"296","line":217,"column":27,"nodeType":"286","endLine":217,"endColumn":93},{"ruleId":"291","severity":1,"message":"292","line":225,"column":28,"nodeType":"293","messageId":"294","endLine":225,"endColumn":30},{"ruleId":"273","severity":1,"message":"297","line":15,"column":13,"nodeType":"275","messageId":"276","endLine":15,"endColumn":21},{"ruleId":"267","severity":1,"message":"268","line":46,"column":15,"nodeType":"269","endLine":58,"endColumn":6},{"ruleId":"267","severity":1,"message":"298","line":58,"column":8,"nodeType":"271","endLine":58,"endColumn":10,"suggestions":"299"},{"ruleId":"273","severity":1,"message":"300","line":65,"column":11,"nodeType":"275","messageId":"276","endLine":65,"endColumn":19},{"ruleId":"273","severity":1,"message":"301","line":4,"column":21,"nodeType":"275","messageId":"276","endLine":4,"endColumn":25},{"ruleId":"267","severity":1,"message":"268","line":39,"column":13,"nodeType":"269","endLine":68,"endColumn":4},{"ruleId":"267","severity":1,"message":"302","line":68,"column":5,"nodeType":"271","endLine":68,"endColumn":7,"suggestions":"303"},{"ruleId":"304","severity":1,"message":"305","line":153,"column":5,"nodeType":"306","messageId":"294","endLine":153,"endColumn":11},{"ruleId":"304","severity":1,"message":"305","line":156,"column":5,"nodeType":"306","messageId":"294","endLine":156,"endColumn":11},{"ruleId":"295","severity":1,"message":"296","line":213,"column":14,"nodeType":"286","endLine":213,"endColumn":81},{"ruleId":"295","severity":1,"message":"296","line":218,"column":10,"nodeType":"286","endLine":218,"endColumn":77},{"ruleId":"267","severity":1,"message":"307","line":66,"column":8,"nodeType":"271","endLine":66,"endColumn":14,"suggestions":"308"},{"ruleId":"309","severity":1,"message":"310","line":3,"column":1,"nodeType":"311","endLine":35,"endColumn":2},{"ruleId":"273","severity":1,"message":"312","line":1,"column":150,"nodeType":"275","messageId":"276","endLine":1,"endColumn":165},{"ruleId":"309","severity":1,"message":"310","line":3,"column":1,"nodeType":"311","endLine":54,"endColumn":2},{"ruleId":"309","severity":1,"message":"310","line":3,"column":1,"nodeType":"311","endLine":29,"endColumn":2},{"ruleId":"273","severity":1,"message":"313","line":2,"column":10,"nodeType":"275","messageId":"276","endLine":2,"endColumn":19},{"ruleId":"273","severity":1,"message":"314","line":3,"column":10,"nodeType":"275","messageId":"276","endLine":3,"endColumn":16},{"ruleId":"287","severity":1,"message":"288","line":19,"column":21,"nodeType":"286","endLine":19,"endColumn":78},{"ruleId":"273","severity":1,"message":"315","line":60,"column":13,"nodeType":"275","messageId":"276","endLine":60,"endColumn":17},{"ruleId":"273","severity":1,"message":"316","line":4,"column":8,"nodeType":"275","messageId":"276","endLine":4,"endColumn":13},{"ruleId":"273","severity":1,"message":"317","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":26},{"ruleId":"273","severity":1,"message":"318","line":3,"column":20,"nodeType":"275","messageId":"276","endLine":3,"endColumn":29},{"ruleId":"273","severity":1,"message":"319","line":6,"column":10,"nodeType":"275","messageId":"276","endLine":6,"endColumn":17},{"ruleId":"273","severity":1,"message":"320","line":20,"column":11,"nodeType":"275","messageId":"276","endLine":20,"endColumn":22},{"ruleId":"291","severity":1,"message":"292","line":46,"column":29,"nodeType":"293","messageId":"294","endLine":46,"endColumn":31},{"ruleId":"273","severity":1,"message":"321","line":2,"column":8,"nodeType":"275","messageId":"276","endLine":2,"endColumn":19},{"ruleId":"309","severity":1,"message":"310","line":3,"column":1,"nodeType":"311","endLine":14,"endColumn":2},{"ruleId":"273","severity":1,"message":"322","line":5,"column":13,"nodeType":"275","messageId":"276","endLine":5,"endColumn":15},{"ruleId":"273","severity":1,"message":"323","line":12,"column":5,"nodeType":"275","messageId":"276","endLine":12,"endColumn":16},{"ruleId":"273","severity":1,"message":"324","line":14,"column":5,"nodeType":"275","messageId":"276","endLine":14,"endColumn":8},{"ruleId":"273","severity":1,"message":"325","line":15,"column":5,"nodeType":"275","messageId":"276","endLine":15,"endColumn":9},{"ruleId":"267","severity":1,"message":"268","line":28,"column":11,"nodeType":"269","endLine":40,"endColumn":2},{"ruleId":"267","severity":1,"message":"326","line":40,"column":3,"nodeType":"271","endLine":40,"endColumn":14,"suggestions":"327"},{"ruleId":"273","severity":1,"message":"328","line":101,"column":7,"nodeType":"275","messageId":"276","endLine":101,"endColumn":12},"no-native-reassign",["329"],"no-negated-in-lhs",["330"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: '_id' and 'getCorrespondingExams'. Either include them or remove the dependency array.","ArrayExpression",["331"],"no-unused-vars","'examRequested' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getTeacher' and 'teacherState'. Either include them or remove the dependency array.",["332"],"'heading' is assigned a value but never used.",["333"],"React Hook useEffect has a missing dependency: 'getClassroom'. Either include it or remove the dependency array.",["334"],"'buttonStyles' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'exams' and 'storeExamDetails'. Either include them or remove the dependency array.",["335"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'students' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_id', 'getCheckStatus', and 'getStudents'. Either include them or remove the dependency array.",["336"],"'topLebal' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: '_id'. Either include it or remove the dependency array.",["337"],"no-dupe-keys","Duplicate key 'border'.","ObjectExpression","React Hook useEffect has a missing dependency: 'editDetails'. Either include it or remove the dependency array.",["338"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'CLASSROOM_ERROR' is defined but never used.","'MenuItems' is defined but never used.","'Button' is defined but never used.","'days' is assigned a value but never used.","'axios' is defined but never used.","'Component' is defined but never used.","'webcamRef' is defined but never used.","'browser' is defined but never used.","'handleClick' is assigned a value but never used.","'AuthContext' is defined but never used.","'tf' is defined but never used.","'warning_num' is assigned a value but never used.","'xyz' is defined but never used.","'warn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CheckWebCam'. Either include it or remove the dependency array.",["339"],"'count' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"342","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},"Update the dependencies array to be: [_id, correspondingExams, getCorrespondingExams]",{"range":"357","text":"358"},"Update the dependencies array to be: [getTeacher, teacher, teacherState]",{"range":"359","text":"360"},{"range":"361","text":"360"},"Update the dependencies array to be: [classRooms, getClassroom]",{"range":"362","text":"363"},"Update the dependencies array to be: [END_POINT, examS, exams, location.search, storeExamDetails]",{"range":"364","text":"365"},"Update the dependencies array to be: [_id, getCheckStatus, getStudents]",{"range":"366","text":"367"},"Update the dependencies array to be: [_id]",{"range":"368","text":"369"},"Update the dependencies array to be: [editDetails, open]",{"range":"370","text":"371"},"Update the dependencies array to be: [CheckWebCam, checkThis]",{"range":"372","text":"373"},[700,720],"[_id, correspondingExams, getCorrespondingExams]",[1158,1167],"[getTeacher, teacher, teacherState]",[932,941],[1053,1065],"[classRooms, getClassroom]",[3286,3325],"[END_POINT, examS, exams, location.search, storeExamDetails]",[1497,1499],"[_id, getCheckStatus, getStudents]",[1959,1961],"[_id]",[1934,1940],"[editDetails, open]",[991,1002],"[CheckWebCam, checkThis]"]